import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from flask import Flask, jsonify, request, send_from_directory
from threading import Thread
import os
import json

TOKEN = '8307281840:AAFUJ21F9-Ql7HPWkUXl8RhNonwRNTPYyJk'  # –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
ADMIN_CHAT_ID = 6172156061  # –¢–≤–æ–π Telegram ID

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__, static_folder='public')

memory_orders = []  # –ó–¥–µ—Å—å –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–∞–∑—ã –¥–ª—è —Ç–µ—Å—Ç–∞

# –û—Ç–¥–∞—ë–º –∫–∞—Ç–∞–ª–æ–≥ –∫–ª–∏–µ–Ω—Ç—É
@app.route('/')
def index():
    return send_from_directory('public', 'catalog.html')

@app.route('/<path:path>')
def static_files(path):
    return send_from_directory('public', path)

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –≤ –∞–¥–º–∏–Ω–∫–µ (—Ç–µ—Å—Ç, –∏–∑ –ø–∞–º—è—Ç–∏)
@app.route('/admin/orders', methods=['GET'])
def admin_orders():
    html = '<h2>–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ (—Ç–µ—Å—Ç, –≤ –ø–∞–º—è—Ç–∏)</h2>'
    if not memory_orders:
        html += '<p>–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.</p>'
    else:
        for i, order in enumerate(memory_orders, 1):
            html += f'<div style="border:1px solid #ccc; padding:10px; margin-bottom:10px;">'
            html += f'<strong>–ó–∞–∫–∞–∑ #{i}</strong><br>'
            html += f'<pre>{json.dumps(order, ensure_ascii=False, indent=2)}</pre>'
            html += '</div>'
    return html

# –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç: —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–∫—Ä—ã—Ç–∏—è WebApp –∫–∞—Ç–∞–ª–æ–≥–∞
@bot.message_handler(commands=['start'])
def start_handler(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    catalog_btn = KeyboardButton(
        "üì¶ –ö–∞—Ç–∞–ª–æ–≥",
        web_app=WebAppInfo(url="https://ekran-tj-hofiz.up.railway.app/catalog.html")
    )
    markup.add(catalog_btn)
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp ‚Äî —Å—é–¥–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –∑–∞–∫–∞–∑—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
@bot.message_handler(content_types=['web_app_data'])
def handle_web_app_data(message):
    order_text = message.web_app_data.data
    user = message.from_user
    user_name = f"{user.first_name or ''} {user.last_name or ''}".strip() or "–ö–ª–∏–µ–Ω—Ç"
    msg = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç: {user_name}\n\n{order_text}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    bot.send_message(ADMIN_CHAT_ID, msg)
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É
    bot.send_message(message.chat.id, "–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω! –°–ø–∞—Å–∏–±–æ.")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –ø–∞–º—è—Ç–∏
    memory_orders.append({
        "user": user_name,
        "order": order_text
    })
    print(f"–ó–∞–∫–∞–∑ –¥–æ–±–∞–≤–ª–µ–Ω: {user_name}")

def run_bot():
    bot.infinity_polling()

if __name__ == '__main__':
    Thread(target=run_bot).start()
    port = int(os.environ.get('PORT', 8080))
    app.run(host='0.0.0.0', port=port)
